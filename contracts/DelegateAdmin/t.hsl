import ("contracts/DelegateAdmin/federal.sol")
import ("contracts/DelegateAdmin/delegate.vy")

account a1 = ChainX::Account("0x7019fa779024c0a0eac1d8475733eefe10a49f3b")
account a2 = ChainY::Account("0x8e215d06ea7ec1fdb4fc5fd21768f4b34ee92ef4")

contract c1 = ChainX::federal("0xafc7d2959e72081770304f6474151293be1fbba7")
contract c2 = ChainY::delegate("0x3723261b2a5a62b778b5c74318534d7fdf8db38c")

op op1 call c2.vote() using a2
op op2 call c1.submitVotes(c2.district, c2.totalVotes) using a1


op op4 if(c2.totalVotes > 50){
   op op6 for acc in [a1, a2]{
        op op3 call c2.vote() using acc
        op op7 payment 10 "ether" from acc to a2 with 1 "ether" as 1 "XYZ"
   }
   op op8 payment 10 "ether" from a1 to a2 with 1 "ether" as 1 "XYZ"
}
//
/*
op op9 loop(3){
    op op7 call c2.vote() using a2
}

op op6 for acc in [a1, a2]{
       op op7 payment 10 "ether" from acc to a2 with 1 "ether" as 1 "XYZ"
   }
*/

dep:
op1 before op2



